<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>edu.ntnu.idi.stud.team10</groupId>
	<artifactId>SpareSti</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>SpareSti</name>
	<description>SpareSti backend project</description>
	<properties>
		<java.version>17</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.30</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>8.0.1.Final</version>
		</dependency>

		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<version>8.3.0</version>
		</dependency>

		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.4.0</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-security -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-security</artifactId>
			<version>1.8.0</version>
		</dependency>


		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-crypto</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-authorization-server</artifactId>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.springframework.security.oauth/spring-security-oauth2 -->
		<dependency>
			<groupId>org.springframework.security.oauth</groupId>
			<artifactId>spring-security-oauth2</artifactId>
			<version>2.5.2.RELEASE</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-oauth2-resource-server -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
			<version>3.2.4</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.mapstruct/mapstruct -->
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>1.5.5.Final</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.mapstruct/mapstruct-processor -->
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-processor</artifactId>
			<version>1.5.5.Final</version>
		</dependency>

		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk</artifactId>
			<version>1.12.687</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.7.3</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.diffplug.spotless</groupId>
				<artifactId>spotless-maven-plugin</artifactId>
				<version>2.43.0</version>
				<executions>
					<execution>
						<id>format</id>
						<goals>
							<goal>check</goal>
							<goal>apply</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<java>
						<!-- These are the defaults, you can override if you want -->
						<includes>
							<include>src/main/java/**/*.java</include>
							<include>src/test/java/**/*.java</include>
						</includes>

						<!-- Cleanthat will refactor your code, but it may break your style: apply it before your formatter -->
						<cleanthat />        <!-- has its own section below -->

						<googleJavaFormat/>

						<importOrder>
							<!-- or a custom ordering -->
							<wildcardsLast>false</wildcardsLast>
							<!-- Optional, default false. Sort wildcard import after specific imports -->
							<order>java|javax,org,com,com.diffplug,,\#com.diffplug,\#</order>
							<!-- or use <file>${project.basedir}/eclipse.importorder</file> -->
							<!-- you can use an empty string for all the imports you didn't specify explicitly,
								'|' to join group without blank line, and '\#` prefix for static imports. -->
							<semanticSort>false</semanticSort>
							<!-- Optional, default false. Sort by package, then class, then member (for static imports).
								Splitting is based on common conventions (packages are lower case, classes start with upper case).
								Use <treatAsPackage> and <treatAsClass> for exceptions. -->
							<treatAsPackage>
								<!-- Packages starting with upper case letters. -->
								<package>com.example.MyPackage</package>
							</treatAsPackage>
							<treatAsClass>
								<!-- Classes starting with lower case letters. -->
								<class>com.example.myClass</class>
							</treatAsClass>
						</importOrder>
						<removeUnusedImports />
						<formatAnnotations />
					</java>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.8</version>
				<configuration>
					<excludes>
						<!-- Exclude files that depend on external services -->
						<exclude>**/*ImageController.*</exclude>
						<exclude>**/*EmailController.*</exclude>
						<exclude>**/*AmazonClient.*</exclude>
						<exclude>**/*MockDataService.*</exclude>
						<exclude>**/*MockDataController.*</exclude>
						<exclude>**/*SavingTip.*</exclude>
						<exclude>**/*SavingTipService.*</exclude>
						<exclude>**/*SavingTipController.*</exclude>
           				<exclude>**/*ChatGPTService.*</exclude>
           				<exclude>**/*DataLoader.*</exclude>
           				<exclude>**/*AuthorizationServerConfig.*</exclude>
           				<exclude>**/*SpareStiApplication.*</exclude>
           				<exclude>**/*Lambda*.class</exclude>
						<exclude>**/*AccountMapperImpl.*</exclude>
						<exclude>**/*BadgeMapperImpl.*</exclude>
						<exclude>**/*BudgetingProductMapperImpl.*</exclude>
						<exclude>**/*BudgetMapperImpl.*</exclude>
						<exclude>**/*BudgetRowMapperImpl.*</exclude>
						<exclude>**/*ChallengeMapperImpl.*</exclude>
						<exclude>**/*SavingsGoalMapperImpl.*</exclude>
						<exclude>**/*TransactionBudgetRowMapperImpl.*</exclude>
						<exclude>**/*TransactionMapperImpl.*</exclude>
						<exclude>**/*UserInfoMapperImpl.*</exclude>
						<exclude>**/*UserMapperImpl.*</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.11.0</version>
				<configuration>
					<source>17</source>
					<target>17</target>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<profiles>
		<profile>
			<id>heroku</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.diffplug.spotless</groupId>
						<artifactId>spotless-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>format</id>
								<phase>none</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>

